<?php

/**
 * @file
 * Primarily Drupal hooks.
 */

define('BOOTSTRAP_MIN_PLUGIN_VERSION', '2.0.0');

/**
 * Implements hook_page_build().
 * @todo Load requierents
 *       Load variants
 */
function bootstrap_library_page_build(&$page) {
  // Use Libraries API to load the js & css files into header
  $config = \Drupal::config('bootstrap_library.settings');
  $variant = ($config->get('minimized.options')) ? 'minified' : 'source';
  if (bootstrap_library_check_theme()) {
    libraries_load('bootstrap', $variant);
//    $page['#attached']['libraries_load'][] = array('bootstrap');
  }
}

/**
 * Verify if current theme is selected.
 */
function bootstrap_library_check_theme() {
  $config = \Drupal::config('bootstrap_library.settings');

  $theme = \Drupal::theme()->getActiveTheme()->getName();
  $valid_themes = $config->get('theme.themes');
  $visibility = $config->get('theme.visibility');
  $theme_match = in_array($theme, $valid_themes);
  $theme_match = !($visibility xor $theme_match);
  return $theme_match;
}

/**
 * Implements hook_libraries_info().
 */
function bootstrap_library_libraries_info() {
  $config = \Drupal::config('bootstrap_library.settings');
  $files = _bootstrap_library_get_files($config->get('files.types.css'), $config->get('files.types.js'));
  $libraries['bootstrap'] = array(
    'name' => 'Bootstrap',
    'vendor url' => 'http://getbootstrap.com/',
    'download url' => 'http://getbootstrap.com/',
    'version arguments' => array(
      'file' => 'js/bootstrap.js',
      // 3.x.x: Botstrap v3.0.3
      'pattern' => '/Bootstrap\s+v?([0-9\.]+)/',
      'lines' => 2,
    ),
//    'dependencies' => array(
//      'jquery',
//     ),
    'files' => array(
      'js' => array(
        'js/bootstrap.min.js',
      ),
      'css' => array(
        'css/bootstrap.min.css',
        'css/bootstrap-theme.min.css',
      ),
    ),
    'variants' => array(
      'minified' => array(
        'files' => array(
          'js' => array(
            'js/bootstrap.min.js',
          ),
          'css' => array(
            'css/bootstrap.min.css',
            'css/bootstrap-theme.min.css',
          ),
        ),
      ),
      'source' => array(
        'files' => array(
          'js' => array(
            'js/bootstrap.js',
          ),
          'css' => array(
            'css/bootstrap.css',
            'css/bootstrap-theme.css',
          ),
        ),
      ),
    ),
  );

  return $libraries;
}

/**
 * Check if the Bootstrap library is installed.
 *
 * @return
 *   A boolean indicating the installed status.
 */
function bootstrap_library_installed() {
  if (($library = libraries_detect('bootstrap')) && !empty($library['installed'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Check if the Bootstrap library has been loaded.
 *
 * @return
 *   A boolean indicating the loaded status.
 */
function bootstrap_library_loaded() {
  if (($library = libraries_load('bootstrap')) && !empty($library['loaded'])) {
    return TRUE;
  }
  else {
    return FALSE;
  }
}

/**
 * Define which files needed to be loaded.
 *
 * @return
 *   An array for variants and an array for files.
 */
function _bootstrap_library_get_files($css = 1, $js = 1) {
  $js_min_array = array(
    'js/bootstrap.min.js',
  );
  $css_min_array = array(
    'css/bootstrap.min.css',
    'css/bootstrap-theme.min.css',
  );
  $js_array = array(
    'js/bootstrap.js',
  );
  $css_array = array(
    'css/bootstrap.css',
    'css/bootstrap-theme.css',
  );
  $min = array();
  $files = array();
  if ($css) {
    $min['css'] = array( 'css' => $css_min_array, );
    $files['css'] = $css_array;
  }
  if ($js) {
    $min['js'] = array( 'js' => $js_min_array, );
    $files['js'] = $js_array;
  }
  $variants = array(
      'minified' => array(
        'files' => array(
          'js' => $min['js'],
          'css' => $min['css'],
        ),
      ),
      'source' => array(
        'files' => $files,
      ));

  return array('variants' => $variants, 'files' => $files);
}
